

#include<bits/stdc++.h>
using namespace std;
struct process
{
    int id;
    int arr;
    int burst;
    int tt;
    int wt;
    bool done;

}p[20];
int main()
{
     int i=0;
     int ct=0;
     float sum1=0,sum2=0;
    printf("enter the number of processes\n");
    int n;
    cin >> n;
    printf("enter the arrival and burst time of  process\n ");
    for(int i=0;i<n;i++)
  {



    cin >> p[i].arr >> p[i].burst;
    p[i].id=i;
    p[i].done=false;
  }

   int sofar=0;

   typedef pair <int,int> ii;
   vector <int >v1;
   while(sofar <n)
   {
       vector <ii > v;
        printf("processes in ready Queue ");

       for(int i=0;i<n;i++)
       {
           if(p[i].arr <=ct && p[i].done==false)
           {


            v.push_back(make_pair(p[i].burst,i));
            printf("  P%d",i );
           }

       }
       printf("\n");
       sort(v.begin(),v.end());
       int w=v[0].second;

       v1.push_back(w);

   ct+=p[w].burst;
   p[w].tt=ct-p[w].arr;
   p[w].wt=p[w].tt -p[w].burst;
   printf(" Process selected\n");
   printf("process  Turnaround Time    Waiting Time\n");
  printf("P%d        %d                %d\n\n" ,w,p[w].tt,p[w].wt);

    sum1+=p[w].tt;
   sum2+=p[w].wt;
   p[w].done=true;
   sofar ++;



}
printf(" Job Queue ");
for( int i=0;i<v1.size();i++)
    printf(" P%d  ",v1[i]);
printf("\n\n\n");

printf("aVERAGE tURNaROUND %f\n",(float)sum1/n );
printf("aVERAGE  Waiting %f\n",(float)sum2/n );
}
/* 0 6
3 2
5 1
9 7
10 5
12 3
14 4
16 5
17 7
19 2
 */

